services:
    db:
        container_name: mydb
        image: mysql:latest
        ports:
            - "32001:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root      
            MYSQL_USER: admin99
            MYSQL_PASSWORD: Admin9999
            MYSQL_DATABASE: messages
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            retries: 5
        volumes:
            - mysql_data:/var/lib/mysql
            - ./init-scripts:/docker-entrypoint-initdb.d
        networks:
            - mynetwork

    adminer:
        container_name: myadminer
        image: adminer:latest
        restart: always
        ports:
            - "8080:8080"
        environment:
            ADMINER_DEFAULT_SERVER: db
        networks:
            - mynetwork

    app:
        build: ./       
        deploy:
            mode: replicated
            replicas: 3  # Ejecutar n instancias de Flask
        networks:
            - mynetwork
        environment:
            - DB_HOST=db
        depends_on:
            - db

    nginx:
        image: nginx:latest
        depends_on:
            - app
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Configuraci√≥n del balanceador
        ports:
            - "4000:4000"
        networks:
            - mynetwork

    prometheus:
        container_name: prometheus
        image: prom/prometheus:latest
        restart: unless-stopped
        volumes:
            - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
        depends_on:
            - app
        ports:
            - "9090:9090"
        networks:
            - mynetwork

    mysql-exporter:
        container_name: mysql-exporter
        image: prom/mysqld-exporter
        command: 
            - --config.my-cnf=/cfg/.my.cnf
            - --mysqld.address=db:3306
        volumes:
            - "./.my.cnf:/cfg/.my.cnf"
        depends_on:
            - db
        ports:
            - 9104:9104
        networks:
            - mynetwork

    grafana:
        container_name: grafana
        image: grafana/grafana:latest
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
        volumes:
            - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
            - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - grafana-data:/var/lib/grafana
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        networks:
            - mynetwork

networks:
    mynetwork:
        driver: bridge
        name: mynetwork
        
volumes:
    mysql_data:
    grafana-data:

